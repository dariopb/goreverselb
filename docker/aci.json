{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "containerGroupName": {
          "type": "string",
          "defaultValue": "darioreverselb",
          "metadata": {
            "description": "reverseLB server"
          }
        },
        "containerImageName": {
            "type": "string",
            "defaultValue": "dariob/reverselb-alpine:0.1",
            "metadata": {
              "description": "reverseLB image"
            }
          }
  
          ,"port": {
            "type": "string",
            "defaultValue": "9000",
            "metadata": {
              "description": "API endpoint port"
            }
          }
          ,"httpport": {
            "type": "string",
            "defaultValue": "9001",
            "metadata": {
              "description": "HTTP endpoint port"
            }
          }
          ,"natsport": {
            "type": "string",
            "defaultValue": "9002",
            "metadata": {
              "description": "NATS endpoint port"
            }
          }
          ,"dynport": {
            "type": "string",
            "defaultValue": "8000",
            "metadata": {
              "description": "Dynamic frontend port start"
            }
          }
          ,"dynportcount": {
            "type": "string",
            "defaultValue": "4",
            "metadata": {
              "description": "Dynamic frontend port count"
            }
          }

          ,"token": {
            "type": "string",
            "defaultValue": "supersecret",
            "metadata": {
                "description": "shared secret for authorization"
            }
        }
        ,"autocertsubjectname": {
            "type": "string",
            "defaultValue": "reverselb-api.westus2.azurecontainer.io",
            "metadata": {
                "description": "subject name for the autogenerated certificate"
            }
        }
        ,"dnsNameLabel": {
            "type": "string",
            "defaultValue": "reverselb-api",
            "metadata": {
                "description": "Dns name prefix for pod"
            }
        }
        ,"loglevel": {
            "type": "string",
            "defaultValue": "debug",
            "metadata": {
                "description": "loglevel"
            }
        }
        ,"portserv1": {
            "type": "string",
            "defaultValue": "8000",
            "metadata": {
              "description": "service port 1"
            }
          }
          ,"portserv2": {
            "type": "string",
            "defaultValue": "8001",
            "metadata": {
              "description": "service port 1"
            }
          }
          ,"portserv3": {
            "type": "string",
            "defaultValue": "8002",
            "metadata": {
              "description": "service port 1"
            }
          }
          ,"portserv4": {
            "type": "string",
            "defaultValue": "8003",
            "metadata": {
              "description": "service port 1"
            }
          }
    },
    "resources": [
        {
            "name": "[parameters('containerGroupName')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "containers": [
                    {
                        "name": "darioreverselb",
                        "properties": {
                            "image": "[parameters('containerImageName')]",
                            "environmentVariables": [
                                {
                                  "name": "PORT",
                                  "value": "[parameters('port')]"
                                },
                                {
                                  "name": "HTTP_PORT",
                                  "value": "[parameters('httpport')]"
                                },
                                {
                                  "name": "NATS_PORT",
                                  "value": "[parameters('natsport')]"
                                },
                                {
                                  "name": "DYN_FRONTEND_PORT",
                                  "value": "[parameters('dynport')]"
                                },
                                {
                                  "name": "DYN_FRONTEND_PORT_COUNT",
                                  "value": "[parameters('dynportcount')]"
                                },

                                {
                                    "name": "LOGLEVEL",
                                    "value": "[parameters('loglevel')]"
                                },
                                {
                                    "name": "TOKEN",
                                    "value": "[parameters('token')]"
                                },
                                {
                                    "name": "AUTO_CERT_SUBJECT_NAME",
                                    "value": "[parameters('autocertsubjectname')]"
                                },
                                {
                                    "name": "OWN_CONTAINER_ID",
                                    "value": "[resourceId('Microsoft.ContainerInstance/containerGroups', parameters('containerGroupName'))]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": 1,
                                    "memoryInGb": 1
                                }
                            },
                            "ports": [
                                {
                                  "port": "[parameters('port')]"
                                }
                                ,{
                                  "port": "[parameters('httpport')]"
                                }
                                ,{
                                  "port": "[parameters('natsport')]"
                                }
                                ,{
                                    "port": "[parameters('portserv1')]"
                                }
                                ,{
                                    "port": "[parameters('portserv2')]"
                                }
                                ,{
                                    "port": "[parameters('portserv3')]"
                                }
                                ,{
                                    "port": "[parameters('portserv4')]"
                                }
                            ]
                        }
                    }

                ],
                "osType": "Linux",
                "ipAddress": {
                    "type": "Public",
                    "ports": [
                      {
                        "protocol": "tcp",
                        "port": "[parameters('port')]"
                      }
                      ,{
                        "protocol": "tcp",
                        "port": "[parameters('httpport')]"
                      }
                      ,{
                        "protocol": "tcp",
                        "port": "[parameters('natsport')]"
                      }
                      ,{
                        "protocol": "tcp",
                        "port": "[parameters('portserv1')]"
                      }
                      ,{
                        "protocol": "tcp",
                        "port": "[parameters('portserv2')]"
                      }
                      ,{
                        "protocol": "tcp",
                        "port": "[parameters('portserv3')]"
                      }
                      ,{
                        "protocol": "tcp",
                        "port": "[parameters('portserv4')]"
                      }
                    ],
                    "dnsNameLabel": "[parameters('dnsNameLabel')]"
                }
            }
        }
    ]
}